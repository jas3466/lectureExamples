import org.sireum.logika._

var x: Z = readInt()
var z: Z = readInt()

//Invariant:
    //(x + z == 100) ^ (z > 0)

assume((x + z == 100) & (z > 0))
l"""{
    1. (x + z == 100) ^ (z > 0)         premise
    2. x + z == 100                     ^e1 1
    3. z > 0                            ^e2 1
}"""

z = z + 1
l"""{
    1. z == z_old + 1           premise
    2. x + z_old == 100         premise
    3. z_old > 0                premise
    4. z > 0                    algebra 1 3
    5. x + z - 1 == 100         algebra 1 2
}"""


x = x - 1
l"""{
    1. x == x_old - 1           premise
    2. z > 0                    premise
    3. x_old + z - 1 == 100     premise
    4. x + z == 100             algebra 1 3
    5. (x + z == 100) ^ (z > 0) ^i 4 2
}"""

assert((x + z == 100) & (z > 0))