import org.sireum.logika._

var x: Z = readInt()
var y: Z = readInt()

//save out the original values
val xOrig: Z = x
val yOrig: Z = y

l"""{
    1. xOrig == x               premise
    2. yOrig == y               premise
}"""

//want to swap x and y
val temp: Z = x
l"""{
    1. xOrig == x               premise
    2. yOrig == y               premise
    3. temp == x                premise
    4. temp == xOrig            subst2 1 3
}"""

x = y
l"""{
    1. x == y                   premise
    2. xOrig == x_old           premise
    3. yOrig == y               premise
    4. temp == x_old            premise
    5. temp == xOrig            premise
    6. x == yOrig               subst2 3 1
}"""

y = temp
l"""{
    1. y == temp                premise
    2. x == yOrig               premise
    3. temp == xOrig            premise
    4. y == xOrig               subst1 3 1
    5. x == yOrig ^ y == xOrig  ^i 2 4
}"""


//what do we want to claim we did?
assert(x == yOrig & y == xOrig)