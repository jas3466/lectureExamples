import org.sireum.logika._

l"""{
    fact
        def sumFact(n: Z): Z
            sum0. sumFact(0) == 0
            sumN. A n: Z n > 0 -> sumFact(n) == sumFact(n-1) + n
}"""

def recSum(bound: Z): Z = {
    l"""{
        requires bound >= 0
        ensures result == sumFact(bound)
    }"""

    var sum: Z = 0
    if (bound > 0) {
        var prev: Z = recSum(bound-1)
        sum = bound + prev
    } else {
        //do nothing
    }

    return sum
}

////////// Test code /////////////

var x: Z = 3

var test: Z = recSum(x)

assert(test == 6)