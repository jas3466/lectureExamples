//Q(x): animal x is big
//H(x): animal x is hairy
//P(x): animal x has big feet

//A x (Q(x) -> H(x)): All big animals are hairy.
// E x (P(x) ^ Q(x)): There exists an animal with big feet
                //that is also big
//∃ x (P(x) ^ H(x)): There exists an animal that has big feet
                //that is also hairy


A x (Q(x) -> H(x)), E x (P(x) ^ Q(x)) ⊢ ∃ x (P(x) ^ H(x))
{
    1. A x (Q(x) -> H(x))                   premise
    2. E x (P(x) ^ Q(x))                    premise

    //to prove a there exists:
        //open a block, assume an alias, plug it in
    3. {
        4. a P(a) ^ Q(a)                    assume
        5. P(a)                             ^e1 4
        6. Q(a)                             ^e2 4
        7. Q(a) -> H(a)                     Ae 1 a
        8. H(a)                             ->e 7 6
        9. P(a) ^ H(a)                      ^i 5 8
        10. ∃ x (P(x) ^ H(x))               Ei 9 a
        //use Ei: P(a) ^ H(a)
        //Want: ∃ x (P(x) ^ H(x))
    }
    11. ∃ x (P(x) ^ H(x))                   Ee 2 3
    //Want: ∃ x (P(x) ^ H(x))
}